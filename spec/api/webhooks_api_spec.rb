=begin
#Webhooks API

#This is the Swagger definition for the AssemblyPayment's Webhooks API

The version of the OpenAPI document: 1.0-external
Contact: support@assemblypayments.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for AssemblyRubyWebhooks::WebhooksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WebhooksApi' do
  before do
    # run before each test
    @api_instance = AssemblyRubyWebhooks::WebhooksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WebhooksApi' do
    it 'should create an instance of WebhooksApi' do
      expect(@api_instance).to be_instance_of(AssemblyRubyWebhooks::WebhooksApi)
    end
  end

  # unit tests for create_webhook
  # Create a Webhook
  # Create a **Webhook** to notify you at the &#x60;URL&#x60; when the &#x60;object_type&#x60; changes
  # @param webhook_params 
  # @param [Hash] opts the optional parameters
  # @return [Webhook]
  describe 'create_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_webhook_by_id
  # Delete Webhook by ID
  # Delete an existing Webhook using a given &#x60;:id&#x60;.
  # @param uuid ID of webhook to delete
  # @param [Hash] opts the optional parameters
  # @return [APIResponse]
  describe 'delete_webhook_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_webhooks
  # List Webhooks
  # Returns the webhooks associated
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of records to retrieve. Up to 200.
  # @option opts [Integer] :offset Number of records to offset. Required for pagination.
  # @return [Webhooks]
  describe 'get_all_webhooks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_webhook_by_id
  # Show Webhook
  # Show details of a specific **Webhook** using a given &#x60;:uuid&#x60;.
  # @param uuid Webhook UUID
  # @param [Hash] opts the optional parameters
  # @return [Webhook]
  describe 'get_webhook_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_webhook
  # Update an existing Webhook
  # Update an existing **Webhook** using a given &#x60;:id&#x60;. You can change the &#x60;URL&#x60;, the &#x60;description&#x60; and whether the **Webhook** is &#x60;enabled&#x60; or &#x60;disabled&#x60;. 
  # @param uuid UUID of webhook to update
  # @param webhook_patch_params 
  # @param [Hash] opts the optional parameters
  # @return [Webhook]
  describe 'update_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
